heat_template_version: rocky

description: >
  OpenStack containerized Contrail Neutron ML2 Plugin configured with Puppet

parameters:
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  ContainerNeutronConfigImage:
    description: The container image to use for the neutron config_volume
    type: string
    default: "contrail-openstack-neutron-init"
  DefaultPasswords:
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  DockerContrailNeutronMl2PluginImageName:
    description: The container image to use for the contrail neutron plugin
    type: string
    default: "contrail-openstack-neutron-ml2-init"
  NeutronServiceProviders:
    default: ''
    description: Global list of service providers used by neutron.
    type: comma_delimited_list
  NeutronPluginMl2PuppetTags:
    default: 'neutron_plugin_ml2'
    description: Puppet resource tag names that are used to generate config files with puppet
    type: string
  ExternalContrailConfigIPs:
    description:  Comma separated list of Contrail API servers.
                  The servers that are not part of the RHOSP voercloud cluster and
                  deployed separatly.
    type: string
  ContrailDmIntegration:
    description: Device Manager integration
    type: boolean
    default: true
  ContrailManagementPortTags:
    default: ''
    description:  List tags for the ports that are connected to management RHOSP networks (
                  provisioning(ctlplane), internal api, external, storage, storagemgmt)
    type: comma_delimited_list
  ContrailDataPortTags:
    default: ''
    description: List tags for the ports that are connected to RHOSP data networks (tenant)
    type: comma_delimited_list

conditions:
  contrail_config_ips_unset: {equals: [{get_param: ExternalContrailConfigIPs}, '']}
  neutron_service_providers_unset:
    or: 
      - {equals: [{get_param: NeutronServiceProviders}, '']}
      - {equals: [{get_param: NeutronServiceProviders}, []]}

resources:
  DockerContrailNeutronMl2PluginImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailNeutronMl2PluginImageName}

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  NeutronBase:
    type: OS::TripleO::Docker::NeutronMl2PluginBase
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Contrail Neutron Plugin role.
    value:
      service_name: contrail_neutron_ml2_plugin
      config_settings:
        map_merge:
          - get_attr: [NeutronBase, role_data, config_settings]
          - get_attr: [ContrailBase, role_data, config_settings]
          - contrail_dm_integration: {get_param: ContrailDmIntegration}
            contrail_management_port_tags: {get_param: ContrailManagementPortTags}
            contrail_data_port_tags: {get_param: ContrailDataPortTags}
          - if:
              - contrail_config_ips_unset
              - null
              - contrail_config_ips: {get_param: ExternalContrailConfigIPs}
      service_config_settings:
        map_merge:
          - get_attr: [NeutronBase, role_data, service_config_settings]
          - if:
              - neutron_service_providers_unset
              - null
              - neutron_api:
                  neutron::server::service_providers: {get_param: NeutronServiceProviders}
      puppet_config:
        config_volume: 'neutron'
        puppet_tags: {list_join: [',', [{get_param: NeutronPluginMl2PuppetTags}, 'ini_setting,create_ini_settings,inifile']]}
        step_config: |
          include ::tripleo::profile::base::neutron::plugins::ml2
          include ::tripleo::network::contrail::neutron_ml2_plugin
        config_image: {get_param: ContainerNeutronConfigImage}
      kolla_config: {}
      docker_config:
        step_3:
          contrail_neutron_plugin:
            image: &contrail_neutron_plugin_image {get_attr: [DockerContrailNeutronMl2PluginImageNormalize, contrail_image]}
            volumes:
              - /var/lib/contrail/plugin_contrail_neutron:/opt/plugin:z
      host_prep_tasks: []
      metadata_settings:
        get_attr: [NeutronBase, role_data, metadata_settings]
